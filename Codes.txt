 Q1 : 
Provide the list of markets in which customer  "Atliq  Exclusive"  operates its business in the  APAC  region. 

select distinct(market),
        customer, region
from dim_customer
where customer = 'Atliq exclusive' and 
		region = 'APAC';

=====

Q2 : What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, 
 unique_products_2020 
 unique_products_2021 
 percentage_change

with tot_products as
		(SELECT count( distinct product_code) as total_products, 
				fiscal_year as year
		FROM fact_sales_monthly 
		GROUP BY fiscal_year)
        
SELECT a.total_products as unique_products_2020,
	   b.total_products as unique_products_2021, 
       (b.total_products - a.total_products) as new_products_introduced,
	   ROUND((b.total_products - a.total_products) /a.total_products *100, 2) as pct_change
FROM tot_products as a
LEFT JOIN tot_products as b
ON a.year+1 = b.year
LIMIT 1
; 
=====


Q3:   Provide a report with all the unique product counts for each  segment  and sort them in descending order of product counts. The final output contains 
 2 fields, 
 segment 
 product_count 

		select segment, 
			   count(distinct product_code) as product_count
		from dim_product	
		group by segment	
		order by product_count desc;

=======

Q4:   Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, 
 segment 
 product_count_2020 
 product_count_2021 
 difference 

WITH CTE1 AS 
	(SELECT P.segment AS A , COUNT(DISTINCT(FS.product_code)) AS B 
    FROM dim_product P, fact_sales_monthly FS
    WHERE P.product_code = FS.product_code
    GROUP BY FS.fiscal_year, P.segment
    HAVING FS.fiscal_year = "2020"),
CTE2 AS
    (
	SELECT P.segment AS C , COUNT(DISTINCT(FS.product_code)) AS D 
    FROM dim_product P, fact_sales_monthly FS
    WHERE P.product_code = FS.product_code
    GROUP BY FS.fiscal_year, P.segment
    HAVING FS.fiscal_year = "2021"
    )     
    
SELECT CTE1.A AS segment, CTE1.B AS product_count_2020, CTE2.D AS product_count_2021, (CTE2.D-CTE1.B) AS difference  
FROM CTE1, CTE2
WHERE CTE1.A = CTE2.C ;

============





Q5 :Get the products that have the highest and lowest manufacturing costs.The final output should contain these fields, 
 product_code 
 product 
 manufacturing_cost 


 select dm.product_code,  
		dm.product,
        round(mf.manufacturing_cost,2) as manufacturing_cost
from fact_manufacturing_cost mf 
join dim_product dm on dm.product_code = mf.product_code
where manufacturing_cost in (
select max(manufacturing_cost) as max from fact_manufacturing_cost
union
select min(manufacturing_cost) as min from fact_manufacturing_cost)
order by manufacturing_cost desc;   

====

Q6:Generate a report which contains the top 5 customers who received an average high  pre_invoice_discount_pct  for the  fiscal  year 2021  and in the Indian  market. The final output contains these fields, 
 customer_code 
 customer 
 average_discount_percentage 

WITH TBL1 AS
(SELECT customer_code AS A, AVG(pre_invoice_discount_pct) AS B FROM fact_pre_invoice_deductions
WHERE fiscal_year = '2021'
GROUP BY customer_code),
     TBL2 AS
(SELECT customer_code AS C, customer AS D FROM dim_customer
WHERE market = 'India')

SELECT TBL2.C AS customer_code, TBL2.D AS customer, ROUND (TBL1.B, 4) AS average_discount_percentage
FROM TBL1 JOIN TBL2
ON TBL1.A = TBL2.C
ORDER BY average_discount_percentage DESC
LIMIT 5 ;

==========

Q7    Get the complete report of the Gross sales amount for the customer  “Atliq Exclusive”  for each month. This analysis helps to  get an idea of low and high-performing months and take strategic decisions. 
 The final report contains these columns: 
 Month 
 Year 
 Gross sales Amount

SELECT YEAR(date) as Year,
	   MONTH(date) as month,
	   round(sum(sold_quantity * gross_price),2) AS gross_sales_amount,dc.customer
FROM fact_sales_monthly as fs
INNER JOIN fact_gross_price as fp
		   ON fs.product_code = fp.product_code and 
		      fs.fiscal_year = fp.fiscal_year
INNER JOIN dim_customer as dc
            ON fs.customer_code = dc.customer_code
WHERE dc.customer = "Atliq Exclusive"
group by month, YEAR(date)
ORDER BY Year, month
; 



Q8 : 
 In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, 
 Quarter 
 total_sold_quantity 


SELECT 
CASE
    WHEN date BETWEEN '2019-09-01' AND '2019-11-01' then 'Q1'  
    WHEN date BETWEEN '2019-12-01' AND '2020-02-01' then 'Q2'
    WHEN date BETWEEN '2020-03-01' AND '2020-05-01' then 'Q3'
    WHEN date BETWEEN '2020-06-01' AND '2020-08-01' then 'Q4'
    END AS Quarters,
    SUM(sold_quantity) AS total_sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY Quarters;

==========

Q9
 Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?  The final output  contains these fields, 
 channel 
 gross_sales_mln 
 percentage 

WITH Output AS
 (
SELECT C.channel,
ROUND(SUM(G.gross_price*FS.sold_quantity/1000000), 2) AS Gross_sales_mln FROM fact_sales_monthly FS JOIN dim_customer C ON FS.customer_code = C.customer_code
JOIN fact_gross_price G ON FS.product_code = G.product_code
			WHERE FS.fiscal_year = 2021
			GROUP BY channel)
                
SELECT channel, CONCAT(Gross_sales_mln,' M') AS Gross_sales_mln , CONCAT(ROUND(Gross_sales_mln*100/total , 2), ' %') AS percentage
FROM
	(
	(SELECT SUM(Gross_sales_mln) AS total FROM Output) A,
	(SELECT * FROM Output) B
	)
ORDER BY percentage DESC ;

==========

Q10:
 Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these 
 fields, 
 division 
 product_code
 product 
 total_sold_quantity 


WITH Output1 AS 
(
SELECT P.division, FS.product_code, P.product, SUM(FS.sold_quantity) AS Total_sold_quantity
FROM dim_product P JOIN fact_sales_monthly FS
ON P.product_code = FS.product_code
WHERE FS.fiscal_year = 2021 
GROUP BY  FS.product_code, division, P.product
),
Output2 AS 
(
SELECT division, product_code, product, Total_sold_quantity,
        RANK() OVER(PARTITION BY division ORDER BY Total_sold_quantity DESC) AS 'Rank_Order' 
FROM Output1
)
 SELECT Output1.division, Output1.product_code, Output1.product, Output2.Total_sold_quantity, Output2.Rank_Order
 FROM Output1 JOIN Output2
 ON Output1.product_code = Output2.product_code
WHERE Output2.Rank_Order IN (1,2,3);

===============
             
